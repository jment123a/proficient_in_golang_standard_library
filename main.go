/*
	写屏障（write barrier）
	数据竞争（data race）：
	竟态条件（race condition）：线程p1与线程p2同时更新共享变量a，竞争的失败者决定了变量a的最终值
	互斥锁（mutex）：
		锁属性：阻塞时睡眠，只能有一个进程访问
		何时用：
		怎么用：
	自旋锁（spin lock）：
		锁属性：阻塞时一直循环获取锁，只能有一个进程访问
		何时用：
		怎么用：

	信号量（semaphore）：用于调度线程运行顺序
		锁属性：阻塞时睡眠，限制同时访问的进程数
		何时用：
		怎么用：进程要访问临界资源前要先读取信号量的值
			if semaphore > 1{
				semaphore--
				// 资源可以请求
			} else {
				// 资源不可用
			}
		临界资源：一次只允许一个进程使用的共享资源
			例如：打印机、变量等
			共享资源：一次允许多个进程使用的资源
			例如：硬盘
		临界区：访问临界资源的那段代码
*/

package main

func main() {
}
